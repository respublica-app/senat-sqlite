name: Générer la base SQLite

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    name: Créer la base de données SQLite
    steps:
      - name: Installer Java (dépendance)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Télécharger le dump psql des bases de données du Sénat
        run: wget https://data.senat.fr/data/dosleg/dosleg.zip -O dosleg.zip
        
      - name: Décompresser le dump psql
        run: unzip dosleg.zip

      - name: Télécharger postgres2sqlite
        uses: robinraju/release-downloader@v1.8
        with:
          repository: caiiiycuk/postgresql-to-sqlite
          tag: 1.0.1
          fileName: pg2sqlite-1.0.1.jar 
        
      - name: Convertir le dump psql en base SQLite
        run: |
          sed 's/public\.//' -i  dosleg.sql
          chmod +x pg2sqlite-1.0.1.jar
          java -jar pg2sqlite-1.0.1.jar -d dosleg.sql -o sqlite.db
          
      - name: Calculer la checksum de la base SQLite
        uses: jmgilman/actions-generate-checksum@v1
        with:
          patterns: |
            sqlite.db
          output: checksum.txt
          
      - name: Récuperer la checksum de la précédente release
        id: get_previous_checksum
        run: |
          release=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          if [[ $(echo "${release}" | jq -r '.message') == "Not Found" ]]; then
            echo "Aucune release précédente n'existe."
            echo "" > previous_checksum.txt
          else
            echo "${release}" | jq -r '.body' > previous_checksum.txt
          fi
      
      - name: Vérifier la nécéssité d'une release
        id: compare_checksums
        continue-on-error: true
        run: |
          sed -i 's/ sqlite\.db$//' checksum.txt
          checksum=$(cat checksum.txt) 
          previous_checksum=$(cat previous_checksum.txt)
          echo "Checksum de la base actuelle : ${checksum}"
          echo "Checksum de la base en release : ${previous_checksum}"
          if [[ "${previous_checksum}" == "" ]]; then
            echo "Aucune release précédente n'existe. Téléchargement et téléversement de la nouvelle release."
            echo "checksum=${checksum}" >> "$GITHUB_OUTPUT"
            echo "checksum_short=${checksum:0:6}" >> "$GITHUB_OUTPUT"
            exit 0
          elif [[ "${previous_checksum}" != "${checksum}" ]]; then
            echo "Les checksums sont différents. Téléchargement et téléversement de la nouvelle release."
            echo "checksum=${checksum}" >> "$GITHUB_OUTPUT"
            echo "checksum_short=${checksum:0:6}" >> "$GITHUB_OUTPUT"
            exit 0
          else
            echo "Les checksums sont identiques. Aucune action nécessaire."
            exit 1
          fi
      
      - name: Créer une release
        uses: actions/create-release@v1
        id: create_release
        if: steps.compare_checksums.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.compare_checksums.outputs.checksum }}
          release_name: Release ${{ steps.compare_checksums.outputs.checksum_short }}
          body: ${{ steps.compare_checksums.outputs.checksum }}
          draft: false
          prerelease: false
          
      - name: Téléverser la base sur la release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        if: steps.compare_checksums.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sqlite.db
          asset_name: sqlite.db
          asset_content_type: application/x-sqlite3

      - name: Supprimer les vieilles releases
        uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
